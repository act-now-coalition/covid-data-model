{
  "title": "AnomalyAnnotation",
  "description": "Base model for API output.",
  "type": "object",
  "properties": {
    "date": {
      "title": "Date",
      "description": "Date of anomaly",
      "type": "string",
      "format": "date"
    },
    "tag_type": {
      "description": "Anomaly type",
      "allOf": [
        {
          "$ref": "#/definitions/TagType"
        }
      ]
    },
    "original_observation": {
      "title": "Original Observation",
      "description": "Original value on this date detected as anomalous.",
      "type": "number"
    }
  },
  "required": [
    "date",
    "tag_type",
    "original_observation"
  ],
  "definitions": {
    "TagType": {
      "title": "TagType",
      "description": "Values that may appear in TagField.TYPE.\n\nCurrently 'annotation' refers to tag types that must have a specific real value for DATE. Other\ntags (currently only PROVENANCE, but may be expanded for things such as storing a processing\nstep name) do not have a date field. Putting the type of all tags in a single enum\nmakes it easy to represent all tags in the same structure but makes the concept of an\n'annotation type' less explicit in our code.",
      "enum": [
        "cumulative_tail_truncated",
        "cumulative_long_tail_truncated",
        "zscore_outlier",
        "provenance"
      ],
      "type": "string"
    }
  }
}